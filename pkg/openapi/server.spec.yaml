openapi: 3.0.3
info:
  title: Compute Service API
  description: |-
    The Compute Service API provides services that allows provisioning and life cycle
    management of Compute clusters. Requests must specify the HTML content type
    header.
  version: 0.1.0
paths:
  /api/v1/organizations/{organizationID}/regions/{regionID}/flavors:
    description: |-
      Compute flavor services.
    parameters:
    - $ref: '#/components/parameters/organizationIDParameter'
    - $ref: '#/components/parameters/regionIDParameter'
    get:
      description: |-
        Lists all compute compatible flavors that the user has access to.
      security:
      - oauth2Authentication: []
      responses:
        '200':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/region/main/pkg/openapi/server.spec.yaml#/components/responses/flavorsResponse'
        '400':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/badRequestResponse'
        '401':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/unauthorizedResponse'
        '500':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/internalServerErrorResponse'
  /api/v1/organizations/{organizationID}/regions/{regionID}/images:
    description: |-
      Compute image services.
    parameters:
    - $ref: '#/components/parameters/organizationIDParameter'
    - $ref: '#/components/parameters/regionIDParameter'
    get:
      description: |-
        Lists all compute compatible images that the user has access to.
      security:
      - oauth2Authentication: []
      responses:
        '200':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/region/main/pkg/openapi/server.spec.yaml#/components/responses/imagesResponse'
        '400':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/badRequestResponse'
        '401':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/unauthorizedResponse'
        '500':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/internalServerErrorResponse'
  /api/v1/organizations/{organizationID}/clusters:
    description: Cluster services.
    parameters:
    - $ref: '#/components/parameters/organizationIDParameter'
    get:
      description: |-
        List all clusters within the organization.
      security:
      - oauth2Authentication: []
      responses:
        '200':
          $ref: '#/components/responses/computeClustersResponse'
        '400':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/badRequestResponse'
        '401':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/unauthorizedResponse'
        '403':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/forbiddenResponse'
        '404':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/notFoundResponse'
        '500':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/internalServerErrorResponse'
  /api/v1/organizations/{organizationID}/projects/{projectID}/clusters:
    x-documentation-group: main
    description: Cluster services.
    parameters:
    - $ref: '#/components/parameters/organizationIDParameter'
    - $ref: '#/components/parameters/projectIDParameter'
    post:
      description: |-
        Creates a new cluster within the selected cluster manager.
      security:
      - oauth2Authentication: []
      requestBody:
        $ref: '#/components/requestBodies/createComputeClusterRequest'
      responses:
        '202':
          $ref: '#/components/responses/computeClusterResponse'
        '400':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/badRequestResponse'
        '401':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/unauthorizedResponse'
        '403':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/forbiddenResponse'
        '409':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/conflictResponse'
        '500':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/internalServerErrorResponse'
  /api/v1/organizations/{organizationID}/projects/{projectID}/clusters/{clusterID}:
    x-documentation-group: main
    description: Cluster services.
    parameters:
    - $ref: '#/components/parameters/organizationIDParameter'
    - $ref: '#/components/parameters/projectIDParameter'
    - $ref: '#/components/parameters/clusterIDParameter'
    put:
      description: |-
        Update a cluster within the selected cluster manager.
      security:
      - oauth2Authentication: []
      requestBody:
        $ref: '#/components/requestBodies/createComputeClusterRequest'
      responses:
        '202':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/acceptedResponse'
        '400':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/badRequestResponse'
        '401':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/unauthorizedResponse'
        '403':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/forbiddenResponse'
        '404':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/notFoundResponse'
        '500':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/internalServerErrorResponse'
    delete:
      description: |-
        Delete a cluster from within a the selected cluster manager.
      security:
      - oauth2Authentication: []
      responses:
        '202':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/acceptedResponse'
        '400':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/badRequestResponse'
        '401':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/unauthorizedResponse'
        '403':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/forbiddenResponse'
        '404':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/notFoundResponse'
        '500':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/internalServerErrorResponse'
components:
  parameters:
    organizationIDParameter:
      name: organizationID
      in: path
      description: |-
        The organization name.
      required: true
      schema:
        $ref: '#/components/schemas/kubernetesNameParameter'
    projectIDParameter:
      name: projectID
      in: path
      description: |-
        The project name.
      required: true
      schema:
        $ref: '#/components/schemas/kubernetesNameParameter'
    regionIDParameter:
      name: regionID
      in: path
      description: The region identifier.
      required: true
      schema:
        $ref: '#/components/schemas/kubernetesNameParameter'
    clusterIDParameter:
      name: clusterID
      in: path
      description: |-
        The cluster name. Must be a valid DNS containing only lower case characters,
        numbers or hyphens, start and end with a character or number, and be at most
        63 characters in length.
      required: true
      schema:
        $ref: '#/components/schemas/kubernetesNameParameter'
  schemas:
    kubernetesNameParameter:
      description: A Compute name. Must be a valid DNS containing only lower case characters, numbers or hyphens, start and end with a character or number, and be at most 63 characters in length.
      type: string
      minLength: 1
      maxLength: 63
    computeClusterNetwork:
      description: A compute cluster network settings.
      type: object
      properties:
        nodePrefix:
          description: Network prefix to provision nodes in. Must be a valid CIDR block.
          type: string
        dnsNameservers:
          description: A list of DNS name server to use.
          type: array
          items:
            description: A DNS nameserver IPv4 address.
            type: string
    volume:
      description: A volume.
      type: object
      required:
      - size
      properties:
        size:
          description: Disk size in GiB.
          type: integer
    machinePool:
      description: A Compute cluster machine.
      type: object
      required:
      - replicas
      - flavorId
      - image
      properties:
        replicas:
          description: Number of machines for a statically sized pool or the maximum
            for an auto-scaled pool.
          type: integer
        flavorId:
          description: Flavor ID.
          type: string
          minLength: 1
        disk:
          $ref: '#/components/schemas/volume'
        firewall:
          $ref: '#/components/schemas/firewallRules'
        publicIPAllocation:
          $ref: '#/components/schemas/publicIPAllocation'
        image:
          $ref: '#/components/schemas/computeImage'
        userData:
          description: UserData contains base64-encoded configuration information or scripts to use upon launch.
          type: string
          format: byte
    firewallRules:
      description: A list of firewall rules applied to a workload pool.
      type: array
      items:
        $ref: '#/components/schemas/firewallRule'
    firewallRule:
      description: A firewall rule applied to a workload pool.
      type: object
      required:
      - direction
      - protocol
      - port
      - prefixes
      properties:
        direction:
          description: The direction of network traffic to apply the rule to.
          type: string
          enum:
          - ingress
          - egress
        protocol:
          description: The protocol to allow.
          type: string
          enum:
          - tcp
          - udp
        port:
          description: The port to allow, or start of a port range.
          type: integer
        portMax:
          description: The end of a port range, inclusive of this this port, if specified.
          type: integer
        prefixes:
          description: A list of CIDR prefixes to allow, it might be any IPv4 or IPv6 in CIDR notation.
          type: array
          items:
            type: string
    publicIPAllocation:
      description: A public IP allocation settings.
      type: object
      required:
      - enabled
      properties:
        enabled:
          description: Enable public IP allocation.
          type: boolean
    computeImage:
      description: The image to use for a server.
      type: object
      properties:
        id:
          description: The image ID.
          type: string
        selector:
          $ref: '#/components/schemas/imageSelector'
      # TODO: in the Typescript generator this causes a use to be declared as
      # 'ComputeImage | null', which is a) wrong and b) inconvenient, thus needs
      # investigation.
      oneOf:
      - required:
        - id
      - required:
        - selector
    imageSelector:
      description: A server image selector.
      type: object
      required:
      - distro
      - version
      properties:
        distro:
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/region/main/pkg/openapi/server.spec.yaml#/components/schemas/osDistro'
        variant:
          description: The operating system variant.
          type: string
        version:
          description: The operating system version to use.
          type: string
    computeClusterWorkloadPool:
      description: A Compute cluster workload pool.
      type: object
      required:
      - name
      - machine
      properties:
        name:
          description: Workload pool name.
          type: string
        machine:
          $ref: '#/components/schemas/machinePool'
    computeClusterWorkloadPools:
      description: A list of Compute cluster workload pools.
      type: array
      minItems: 1
      items:
        $ref: '#/components/schemas/computeClusterWorkloadPool'
    computeClusterSpec:
      description: Compute cluster creation parameters.
      type: object
      required:
      - regionId
      - workloadPools
      properties:
        regionId:
          description: The region to provision the cluster in.
          type: string
        workloadPools:
          $ref: '#/components/schemas/computeClusterWorkloadPools'
    computeClusterStatus:
      description: Compute cluster status.
      type: object
      properties:
        sshPrivateKey:
          description: SSH private key that allows access to the cluster.
          type: string
        workloadPools:
          $ref: '#/components/schemas/computeClusterWorkloadPoolsStatus'
    computeClusterWorkloadPoolsStatus:
      description: A list of Compute cluster workload pools status.
      type: array
      items:
        $ref: '#/components/schemas/computeClusterWorkloadPoolStatus'
    computeClusterWorkloadPoolStatus:
      description: Compute cluster workload pool status.
      type: object
      required:
      - name
      - replicas
      properties:
        name:
          description: Workload pool name.
          type: string
        replicas:
          description: Number of machines.
          type: integer
        machines:
          $ref: '#/components/schemas/computeClusterMachinesStatus'
    computeClusterMachinesStatus:
      description: A list of Compute cluster machines status.
      type: array
      items:
        $ref: '#/components/schemas/computeClusterMachineStatus'
    computeClusterMachineStatus:
      description: Compute cluster machine status.
      type: object
      required:
      - hostname
      - status
      properties:
        hostname:
          description: Machine hostname.
          type: string
        privateIP:
          description: Machine private IP address.
          type: string
        publicIP:
          description: Machine public IP address.
          type: string
        status:
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/schemas/resourceProvisioningStatus'
    computeClusterRead:
      description: Compute cluster read.
      type: object
      required:
      - metadata
      - spec
      properties:
        metadata:
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/schemas/projectScopedResourceReadMetadata'
        spec:
          $ref: '#/components/schemas/computeClusterSpec'
        status:
          $ref: '#/components/schemas/computeClusterStatus'
    computeClusterWrite:
      description: Compute cluster create or update.
      type: object
      required:
      - metadata
      - spec
      properties:
        metadata:
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/schemas/resourceWriteMetadata'
        spec:
          $ref: '#/components/schemas/computeClusterSpec'
    computeClusters:
      description: A list of Compute clusters.
      type: array
      items:
        $ref: '#/components/schemas/computeClusterRead'
  requestBodies:
    createComputeClusterRequest:
      description: Compute cluster request parameters.
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/computeClusterWrite'
          example:
            metadata:
              name: cluster
            spec:
              regionId: b059b3e6-9ae5-42b7-94b4-f42fb7a6baee
              workloadPools:
              - name: default
                machine:
                  flavorId: c7568e2d-f9ab-453d-9a3a-51375f78426b
                  image:
                    selector:
                      distro: ubuntu
                      version: '24.04'
                  replicas: 3
                firewall:
                  - direction: ingress
                    protocol: tcp
                    port: 80
                    prefixes: 
                    - 192.168.1.0/24
                  - direction: ingress
                    protocol: tcp
                    port: 1066
                    portMax: 1999
                    prefixes: 
                    - 10.0.0.0/8
                    - 172.16.0.0/12
                publicIPAllocation:
                  enabled: true
  responses:
    computeClusterResponse:
      description: A Compute cluster.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/computeClusterRead'
          example:
            metadata:
              id: c7568e2d-f9ab-453d-9a3a-51375f78426b
              name: cluster
              organizationId: d4600d6e-e965-4b44-a808-84fb2fa36702
              projectId: cae219d7-10e5-4601-8c2c-ee7e066b93ce
              creationTime: 2023-07-31T10:45:45Z
              provisioningStatus: provisioned
            spec:
              regionId: b059b3e6-9ae5-42b7-94b4-f42fb7a6baee
              workloadPools:
              - name: default
                machine:
                  flavorId: c7568e2d-f9ab-453d-9a3a-51375f78426b
                  image:
                    selector:
                      distro: ubuntu
                      version: '24.04'
                  replicas: 3
                firewall:
                  - direction: ingress
                    protocol: tcp
                    port: 80
                    prefixes: 
                    - 192.168.1.0/24
                  - direction: ingress
                    protocol: tcp
                    port: 1066
                    portMax: 1999
                    prefixes: 
                    - 10.0.0.0/8
                    - 172.16.0.0/12
                publicIPAllocation:
                  enabled: true
            status:
              workloadPools:
              - name: default
                replicas: 1
                machines:
                - hostname: machine-1
                  privateIP: 10.0.0.1
                  publicIP: 172.16.0.2
                  status: provisioned
    computeClustersResponse:
      description: A list of Compute clusters.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/computeClusters'
          example:
          - metadata:
              id: c7568e2d-f9ab-453d-9a3a-51375f78426b
              name: cluster
              organizationId: d4600d6e-e965-4b44-a808-84fb2fa36702
              projectId: cae219d7-10e5-4601-8c2c-ee7e066b93ce
              creationTime: 2023-07-31T10:45:45Z
              provisioningStatus: provisioned
            spec:
              regionId: b059b3e6-9ae5-42b7-94b4-f42fb7a6baee
              workloadPools:
              - name: default
                machine:
                  flavorId: c7568e2d-f9ab-453d-9a3a-51375f78426b
                  image:
                    selector:
                      distro: ubuntu
                      version: '24.04'
                  replicas: 3
                firewall:
                  - direction: ingress
                    protocol: tcp
                    port: 80
                    prefixes: 
                    - 192.168.1.0/24
                  - direction: ingress
                    protocol: tcp
                    port: 1066
                    portMax: 1999
                    prefixes: 
                    - 10.0.0.0/8
                    - 172.16.0.0/12
                publicIPAllocation:
                  enabled: true
            status:
              workloadPools:
              - name: default
                replicas: 1
                machines:
                - hostname: machine-1
                  privateIP: 10.0.0.1
                  publicIP: 172.16.0.2
                  status: provisioned
  securitySchemes:
    oauth2Authentication:
      description: Operation requires OAuth2 bearer token authentication.
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://identity.unikorn-cloud.org/oauth2/v2/authorization
          tokenUrl: https://identity.unikorn-cloud.org/oauth2/v2/token
          scopes: {}

