// Code generated by MockGen. DO NOT EDIT.
// Source: interfaces.go
//
// Generated by this command:
//
//	mockgen -source=interfaces.go -destination=mock/interfaces.go -package mock
//
// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	openapi "github.com/unikorn-cloud/region/pkg/openapi"
	gomock "go.uber.org/mock/gomock"
)

// MockClientInterface is a mock of ClientInterface interface.
type MockClientInterface struct {
	ctrl     *gomock.Controller
	recorder *MockClientInterfaceMockRecorder
}

// MockClientInterfaceMockRecorder is the mock recorder for MockClientInterface.
type MockClientInterfaceMockRecorder struct {
	mock *MockClientInterface
}

// NewMockClientInterface creates a new mock instance.
func NewMockClientInterface(ctrl *gomock.Controller) *MockClientInterface {
	mock := &MockClientInterface{ctrl: ctrl}
	mock.recorder = &MockClientInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClientInterface) EXPECT() *MockClientInterfaceMockRecorder {
	return m.recorder
}

// Client mocks base method.
func (m *MockClientInterface) Client(ctx context.Context) (openapi.ClientWithResponsesInterface, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Client", ctx)
	ret0, _ := ret[0].(openapi.ClientWithResponsesInterface)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Client indicates an expected call of Client.
func (mr *MockClientInterfaceMockRecorder) Client(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Client", reflect.TypeOf((*MockClientInterface)(nil).Client), ctx)
}

// Images mocks base method.
func (m *MockClientInterface) Images(ctx context.Context, organizationID, regionID string) ([]openapi.Image, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Images", ctx, organizationID, regionID)
	ret0, _ := ret[0].([]openapi.Image)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Images indicates an expected call of Images.
func (mr *MockClientInterfaceMockRecorder) Images(ctx, organizationID, regionID any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Images", reflect.TypeOf((*MockClientInterface)(nil).Images), ctx, organizationID, regionID)
}
